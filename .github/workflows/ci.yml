name: CI

on: 
  push:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    container: giffon/charleywong_devcontainer_workspace:20201124
    services:
      selenium:
        image: selenium/standalone-chrome-debug:3.141.59-yttrium
        ports:
          - 4444:4444
    env:
      HUB_HOST: selenium
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/cache@v2
        with:
          path: |
            ~/haxe
            node_modules
          key: ${{ runner.os }}
      - name: Setup Python virtualenv
        shell: bash
        run: |
          set -ex
          python3 -m virtualenv -p /usr/bin/python3.7 --no-pip ~/venv
          source ~/venv/bin/activate
          curl -sSLf https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          python get-pip.py pip==19.3.1
          pip3 install -r requirements.txt
      - name: Install libraries
        run: |
          set -ex
          yarn
          bash build-dclookup.sh
          lix download
          npx dts2hx @types/gtag.js --noLibWrap --output lib/dts2hx
      - uses: actions/upload-artifact@v1
        with:
          name: dclookup
          path: dclookup.js
      - name: Compile index.js
        run: haxe build.hxml
      - name: Minify browser.js
        run: npx browserify browser.js -g [ envify --NODE_ENV production ] -g uglifyify | npx terser --compress --mangle > static/browser.bundled.js
      - uses: actions/upload-artifact@v1
        with:
          name: index
          path: index.js
      - uses: actions/upload-artifact@v1
        with:
          name: browser
          path: static/browser.bundled.js
      - name: Export flexsearch index
        run: haxe exportFlexsearch.hxml
      - uses: actions/upload-artifact@v1
        with:
          name: flexsearch
          path: flexsearch.json
      - name: Dump HKBASE directory
        run: |
          set -ex
          haxe dumpHkbaseDirectory.hxml
          node dumpHkbaseDirectory.js dump
        env:
          GOOGLE_CLIENT_EMAIL: ${{ secrets.googleClientEmail }}
          GOOGLE_PRIVATE_KEY: ${{ secrets.googlePrivateKey }}
      - uses: actions/upload-artifact@v1
        with:
          name: HkbaseDirectory
          path: HkbaseDirectory.json
      - name: Compile Chrome extension
        run: haxe chrome-extension.hxml
      - uses: actions/upload-artifact@v1
        with:
          name: chrome
          path: chrome
      - name: Run test
        shell: bash
        run: |
          source ~/venv/bin/activate
          haxe test.hxml "$GITHUB_EVENT_NAME"
  deploy:
    needs: build
    if: success() && github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/production' )
    runs-on: ubuntu-latest
    container: giffon/charleywong_devcontainer_workspace:20201124
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/cache@v2
        with:
          path: |
            ~/haxe
            node_modules
          key: ${{ runner.os }}
      - uses: actions/download-artifact@v1
        with:
          name: dclookup
      - uses: actions/download-artifact@v1
        with:
          name: index
      - uses: actions/download-artifact@v1
        with:
          name: browser
      - uses: actions/download-artifact@v1
        with:
          name: flexsearch
      - uses: actions/download-artifact@v1
        with:
          name: HkbaseDirectory
      - name: move artifacts
        run: |
          set -ex
          mv dclookup/* .
          mv index/* .
          mv browser/* static
          mv flexsearch/* .
          mv HkbaseDirectory/* .
          rm -r dclookup index browser flexsearch HkbaseDirectory
      - name: Install libraries
        run: |
          set -ex
          yarn
          lix download
          npx dts2hx @types/gtag.js --noLibWrap --output lib/dts2hx
      - name: Dump YellowBlueMap
        run: aws s3 cp --recursive s3://pubic-ccjdhhhdi ybm
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.YBM_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.YBM_AWS_SECRET_ACCESS_KEY }}
      - run: ls -lh
      - name: Set Env
        run: |
          set -ex
          if [ "${GITHUB_REF}" = "refs/heads/master" ]; then
            echo "DEPLOY_STAGE=master" >> $GITHUB_ENV
            echo "SERVER_HOST=charleywong-master.giffon.io" >> $GITHUB_ENV
          elif [ "${GITHUB_REF}" = "refs/heads/production" ]; then
            echo "DEPLOY_STAGE=production" >> $GITHUB_ENV
            echo "SERVER_HOST=charleywong.giffon.io" >> $GITHUB_ENV
          fi
      - name: Deploy
        run: npx serverless deploy --stage "${DEPLOY_STAGE}"
        env:
          GOOGLE_CLIENT_EMAIL: ${{ secrets.googleClientEmail }}
          GOOGLE_PRIVATE_KEY: ${{ secrets.googlePrivateKey }}
          FACEBOOK_TOKEN: ${{ secrets.FACEBOOK_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.awsAccessKeyId }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.awsSecretAccessKey }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.serverlessAccessKey }}
      - name: Post-deployment test
        run: haxe test.hxml post-deployment
      - name: Export spreadsheet
        if: github.ref == 'refs/heads/production'
        run: haxe -D CI exportSpreadsheet.hxml
        env:
          GOOGLE_CLIENT_EMAIL: ${{ secrets.googleClientEmail }}
          GOOGLE_PRIVATE_KEY: ${{ secrets.googlePrivateKey }}
